{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"introduction","unlisted":false},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/docs/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"First Bot","href":"/docs/first-bot","docId":"getting-started/first-bot","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"Function Syntax & Execution","href":"/docs/core-concepts/function-syntax","docId":"core-concepts/function-syntax","unlisted":false},{"type":"link","label":"Using Functions","href":"/docs/core-concepts/commands","docId":"core-concepts/commands","unlisted":false},{"type":"link","label":"Handling Interactions","href":"/docs/core-concepts/interactions","docId":"core-concepts/interactions","unlisted":false},{"type":"link","label":"Handling Events","href":"/docs/core-concepts/events","docId":"core-concepts/events","unlisted":false},{"type":"link","label":"Using Variables","href":"/docs/core-concepts/variables","docId":"core-concepts/variables","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Creating Embeds","href":"/docs/guides/creating-embeds","docId":"guides/creating-embeds","unlisted":false},{"type":"link","label":"Creating Custom Functions","href":"/docs/guides/custom-functions","docId":"guides/custom-functions","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"link","label":"Function List","href":"/docs/reference/function-list","docId":"reference/function-list","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"core-concepts/commands":{"id":"core-concepts/commands","title":"Using Functions","description":"The core of creating command logic in Solara.js involves using special functions within the code property of your command files. These functions start with a dollar sign ($) and handle various tasks.","sidebar":"docsSidebar"},"core-concepts/events":{"id":"core-concepts/events","title":"Handling Events","description":"While Solara.js excels at simplifying the handling of command-related events like messageCreate (for prefix commands) and interactionCreate (for slash commands, buttons, etc.) through its command file structure, you might need to react to other Discord Gateway events directly (e.g., a user joining the server, a message being deleted, etc.).","sidebar":"docsSidebar"},"core-concepts/function-syntax":{"id":"core-concepts/function-syntax","title":"Function Syntax & Execution","description":"The core of creating command logic in Solara.js involves using special functions within the code property of your command files. These functions start with a dollar sign ($) and handle various tasks, from retrieving data to building messages and controlling flow.","sidebar":"docsSidebar"},"core-concepts/interactions":{"id":"core-concepts/interactions","title":"Handling Interactions","description":"Solara.js provides seamless ways to handle Discord Interactions beyond slash commands, including Button Clicks, Select Menu Choices, and Modal Submissions.","sidebar":"docsSidebar"},"core-concepts/variables":{"id":"core-concepts/variables","title":"Using Variables","description":"Solara.js provides built-in functions to store and retrieve temporary data during the execution of a command's code block. This is useful for holding intermediate values, results from functions, or user input for later use within the same command execution.","sidebar":"docsSidebar"},"getting-started/first-bot":{"id":"getting-started/first-bot","title":"First Bot","description":"Let's create a simple \"ping\" bot using Solara.js. This example demonstrates the core file structure and the function-based scripting approach.","sidebar":"docsSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Before you begin, ensure you have Node.js v16.9.0 or higher installed on your system. This is a requirement for Discord.js v14, which Solara.js relies on.","sidebar":"docsSidebar"},"guides/creating-embeds":{"id":"guides/creating-embeds","title":"Creating Embeds","description":"Discord Embeds allow you to create richly formatted messages. Solara.js provides a set of functions to easily build embeds within your command's code block.","sidebar":"docsSidebar"},"guides/custom-functions":{"id":"guides/custom-functions","title":"Creating Custom Functions","description":"While Solara.js provides a wide array of built-in $functions, you might encounter situations requiring more complex logic, external API calls, or database interactions that aren't covered. Solara.js allows you to extend its functionality by creating your own custom functions.","sidebar":"docsSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Solara.js is a powerful yet intuitive framework built on Discord.js v14, designed to significantly simplify and accelerate the development of Discord bots.","sidebar":"docsSidebar"},"reference/function-list":{"id":"reference/function-list","title":"Function List","description":"This page lists the built-in functions available in Solara.js, categorized for easier navigation.","sidebar":"docsSidebar"}}}}